name: Release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to release (e.g., patch, minor, major, or specific version like 1.2.3)'
        required: false
        default: 'patch'
        type: string

permissions:
  contents: write
  pull-requests: write
  id-token: write

jobs:
  release:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    environment: npm

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: 'pnpm'
          registry-url: 'https://registry.npmjs.org'

      - name: Install dependencies
        run: pnpm install --frozen-lockfile

      - name: Configure git
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"

      - name: Run release-it
        run: pnpm release --ci --increment=${{ inputs.version || 'patch' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Notify release completion
        if: success()
        run: |
          VERSION=$(node -p "require('./package.json').version")
          echo "üéâ Successfully released runbook-admin@$VERSION"
          echo "üì¶ Package: https://www.npmjs.com/package/runbook-admin"
          echo "üè∑Ô∏è Release: https://github.com/${{ github.repository }}/releases/tag/v$VERSION"